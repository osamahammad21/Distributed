SECTION 1.5 CHALLENGES25from one environment (cell) to another. We regard the caller’s phone as the client and the callee’s phone as a resource. The two phone users making the call are unaware of the mobility of the phones (the client and the resource) between cells.Transparency  hides  and  renders  anonymous  the  resources  that  are  not  of  direct  relevance to the task in hand for users and application programmers. For example, it is generally  desirable  for  similar  hardware  resources  to  be  allocated  interchangeably  to  perform a task – the identity of a processor used to execute a process is generally hidden from  the  user  and  remains  anonymous.  As  pointed  out  in  Section  1.3.2,  this  may  not  always be what is required: for example, a traveller who attaches a laptop computer to the local network in each office visited should make use of local services such as the send mail service, using different servers at each location. Even within a building, it is normal to arrange for a document to be printed at a particular, named printer: usually one that is near to the user. 1.5.8Quality of serviceOnce users are provided with the functionality that they require of a service, such as the file service in a distributed system, we can go on to ask about the quality of the service provided.  The  main  nonfunctional  properties  of  systems  that  affect  the  quality  of  the  service  experienced  by  clients  and  users  are  reliability,security  and  performance.Adaptability to meet changing system configurations and resource availability has been recognized as a further important aspect of service quality. Reliability and security issues are critical in the design of most computer systems. The  performance  aspect  of  quality  of  service  was  originally  defined  in  terms  of  responsiveness  and  computational  throughput,  but  it  has  been  redefined  in  terms  of  ability to meet timeliness guarantees, as discussed in the following paragraphs.Some applications, including multimedia applications, handle time-critical data – streams  of  data  that  are  required  to  be  processed  or  transferred  from  one  process  to  another at a fixed rate. For example, a movie service might consist of a client program that is retrieving a film from a video server and presenting it on the user’s screen. For a satisfactory result the successive frames of video need to be displayed to the user within some specified time limits. In fact, the abbreviation QoS has effectively been commandeered to refer to the ability of systems to meet such deadlines. Its achievement depends upon the availability of the necessary computing and network resources at the appropriate times. This implies a  requirement  for  the  system  to  provide  guaranteed  computing  and  communication  resources that are sufficient to enable applications to complete each task on time (for example, the task of displaying a frame of video). The networks commonly used today have high performance –for example, BBC iPlayer  generally  performs  acceptably  –but  when  networks  are  heavily  loaded  their  performance can deteriorate, and no guarantees are provided. QoS applies to operating systems as well as networks. Each critical resource must be reserved by the applications that  require  QoS,  and  there  must  be  resource  managers  that  provide  guarantees.  Reservation  requests  that  cannot  be  met  are  rejected.  These  issues  will  be  addressed  further in Chapter 20.
26                      CHAPTER                      1                                            CHARACTERIZATION OF DISTRIBUTED SYSTEMS1.6Case study: The World Wide WebThe  World  Wide  Web  [www.w3.org  I,  Berners-Lee  1991]  is  an  evolving  system  for  publishing and accessing resources and services across the Internet. Through commonly available  web  browsers,  users  retrieve  and  view  documents  of  many  types,  listen  to  audio streams and view video streams, and interact with an unlimited set of services.The  Web  began  life  at  the  European  centre  for  nuclear  research  (CERN),  Switzerland, in 1989 as a vehicle for exchanging documents between a community of physicists connected by the Internet [Berners-Lee 1999]. A key feature of the Web is that it provides a hypertext structure among the documents that it stores, reflecting the users’ requirement to organize their knowledge. This means that documents contain links (or hyperlinks) – references to other documents and resources that are also stored in the Web. It is fundamental to the user’s experience of the Web that when they encounter a given image or piece of text within a document, this will frequently be accompanied by links to related documents and other resources. The structure of links can be arbitrarily complex and the set of resources that can be added is unlimited – the ‘web’ of links is indeed world-wide. Bush  [1945]  conceived  of  hypertextual  structures  over  50  years  ago;  it  was  with  the  development of the Internet that this idea could be manifested on a world-wide scale. The  Web  is  an  open  system:  it  can  be  extended  and  implemented  in  new  ways  without  disturbing  its  existing  functionality  (see  Section  1.5.2).  First,  its  operation  is  based on communication standards and document or content standards that are freely published and widely implemented. For example, there are many types of browser, each in many cases implemented on several platforms; and there are many implementations of web servers. Any conformant browser can retrieve resources from any conformant server. So users have access to browsers on the majority of the devices that they use, from mobile phones to desktop computers.Second, the Web is open with respect to the types of resource that can be published and shared on it. At its simplest, a resource on the Web is a web page or some other type ofcontent  that  can  be  presented  to  the  user,  such  as  media  files  and  documents  in  Portable Document Format. If somebody invents, say, a new image-storage format, then images in this format can immediately be published on the Web. Users require a means of viewing images in this new format, but browsers are designed to accommodate new content-presentation functionality in the form of ‘helper’ applications and ‘plug-ins’.The Web has moved beyond these simple data resources to encompass services, such  as  electronic  purchasing  of  goods.  It  has  evolved  without  changing  its  basic  architecture. The Web is based on three main standard technological components:•the HyperText Markup Language (HTML), a language for specifying the contents and layout of pages as they are displayed by web browsers;•Uniform Resource Locators (URLs), also known as Uniform Resource Identifiers (URIs), which identify documents and other resources stored as part of the Web;•a  client-server  system  architecture,  with  standard  rules  for  interaction  (the  HyperText Transfer Protocol – HTTP) by which browsers and other clients fetch documents  and  other  resources  from  web  servers.  Figure  1.7  shows  some  web  servers, and browsers making requests to them. It is an important feature that users may locate and manage their own web servers anywhere on the Internet.
Figure 1.7Web servers and web browsersInternetBrowsersWeb serverswww.google.comwww.cdk5.netwww.w3c.orgstandardsfaq.htmlhttp://www.google.com/search?q=obamaGET http://www.cdk5.netFile system ofwww.w3c.orghttp://www.w3.org/standards/faq.html#conformanceSECTION 1.6 CASE STUDY: THE WORLD WIDE WEB27We  now  discuss  these  components  in  turn,  and  in  so  doing  explain  the  operation  of  browsers and web servers when a user fetches web pages and clicks on the links within them.HTML  •  The HyperText Markup Language [www.w3.org II] is used to specify the text and images that make up the contents of a web page, and to specify how they are laid out and formatted for presentation to the user. A web page contains such structured items as  headings,  paragraphs,  tables  and  images.  HTML  is  also  used  to  specify  links  and  which resources are associated with them. Users may produce HTML by hand, using a standard text editor, but they more commonly use an HTML-aware ‘wysiwyg’ editor that generates HTML from a layout that they create graphically. A typical piece of HTML text follows:<IMG SRC = “http://www.cdk5.net/WebExample/Images/earth.jpg”>1<P>2Welcome to Earth! Visitors may also be interested in taking a look at the 3<A HREF = “http://www.cdk5.net/WebExample/moon.html”>Moon</A>.4</P>5This  HTML  text  is  stored  in  a  file  that  a  web  server  can  access  –  let  us  say  the  file  earth.html. A browser retrieves the contents of this file from a web server – in this case a server on a computer called www.cdk5.net. The browser reads the content returned by the server and renders it into formatted text and images laid out on a web page in the familiar fashion. Only the browser – not the server – interprets the HTML text. But the server  does  inform  the  browser  of  the  type  of  content  it  is  returning,  to  distinguish  it  from, say, a document in Portable Document Format. The server can infer the content type from the filename extension ‘.html’.Note that the HTML directives, known as tags, are enclosed by angle brackets, such  as  <P>.  Line  1  of  the  example  identifies  a  file  containing  an  image  for  presentation.  Its  URL  is  http://www.cdk5.net/WebExample/Images/earth.jpg.  Lines  2  and 5 are directives to begin and end a paragraph, respectively. Lines 3 and 4 contain text to be displayed on the web page in the standard paragr